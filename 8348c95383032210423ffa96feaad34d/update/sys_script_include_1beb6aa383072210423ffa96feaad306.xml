<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1792505_event_ma.FeedbackUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>FeedbackUtils</name>
        <script><![CDATA[var FeedbackUtils = Class.create();
FeedbackUtils.prototype = {
    initialize: function(eventid) {
        this.eventid = eventid;
    },
	getFeedback:function(id){
        var res = [];
        var feedback = new GlideRecord('x_1792505_event_ma_feedback');
        feedback.addQuery('feedback_id', id);
        feedback.query();
        if (feedback.next()) {
            res.push({
                id: feedback.getDisplayValue(),
				rating : feedback.getValue('rating'),
            });}
            return JSON.stringify(res);
        
    },
	checkFeedback:function(id){
        var feedback = new GlideRecord('x_1792505_event_ma_feedback');
        feedback.addQuery('feedback_id', id);
        feedback.query();
        if (feedback.next()) {
			if(feedback.getValue('rating')== 'excellent'||feedback.getValue('rating')== 'good')
			{
				return 'positive';
			}
		}
		return 'negative';
		},
		getEventFeedback:function(){
        var res = [];
        var feedback = new GlideRecord('x_1792505_event_ma_feedback');
        feedback.addQuery('event_id', this.eventid);
        feedback.query();
        if (feedback.next()) {
            res.push({
                id: feedback.getDisplayValue(),
				rating : feedback.getValue('rating'),
            });}
            return JSON.stringify(res);
        
    },
	fetchAllFeedback: function() {
        var res = [];
        var gr = new GlideRecord('x_1792505_event_ma_feedback'); // Use your actual feedback table name
        gr.query();
        while (gr.next()) {
            res.push({
                number: gr.getValue('number'),
                attendee: gr.getDisplayValue('attendee_id'), // Use getDisplayValue if attendee_id is a reference
                rating: gr.getValue('rating'),
                comments: gr.getValue('comments')
            });
        }
        return JSON.stringify(res);
    },


	




    type: 'FeedbackUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-05 09:30:59</sys_created_on>
        <sys_id>1beb6aa383072210423ffa96feaad306</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>FeedbackUtils</sys_name>
        <sys_package display_value="Event Management &amp; Planning System" source="x_1792505_event_ma">8348c95383032210423ffa96feaad34d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Event Management &amp; Planning System">8348c95383032210423ffa96feaad34d</sys_scope>
        <sys_update_name>sys_script_include_1beb6aa383072210423ffa96feaad306</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-05 18:09:18</sys_updated_on>
    </sys_script_include>
</record_update>
